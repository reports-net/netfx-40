'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.18052
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.18052 によって自動生成されました。
'
Namespace pdf.ac.pao.www
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SamplePdfSoapBinding", [Namespace]:="http://www.pao.ac:8080/axis/SamplePdf.jws")>  _
    Partial Public Class SamplePdfService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getPrintDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBaisuuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAddressListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMitsumoriOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://www.pao.ac:8080/axis/SamplePdf.jws"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getPrintDataCompleted As getPrintDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getBaisuuCompleted As getBaisuuCompletedEventHandler
        
        '''<remarks/>
        Public Event getAddressListCompleted As getAddressListCompletedEventHandler
        
        '''<remarks/>
        Public Event getMitsumoriCompleted As getMitsumoriCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://DefaultNamespace", ResponseNamespace:="http://www.pao.ac:8080/axis/SamplePdf.jws")>  _
        Public Function getPrintData() As <System.Xml.Serialization.SoapElementAttribute("getPrintDataReturn", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("getPrintData", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Function BegingetPrintData(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getPrintData", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetPrintData(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPrintDataAsync()
            Me.getPrintDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPrintDataAsync(ByVal userState As Object)
            If (Me.getPrintDataOperationCompleted Is Nothing) Then
                Me.getPrintDataOperationCompleted = AddressOf Me.OngetPrintDataOperationCompleted
            End If
            Me.InvokeAsync("getPrintData", New Object(-1) {}, Me.getPrintDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPrintDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPrintDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPrintDataCompleted(Me, New getPrintDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://DefaultNamespace", ResponseNamespace:="http://www.pao.ac:8080/axis/SamplePdf.jws")>  _
        Public Function getBaisuu() As <System.Xml.Serialization.SoapElementAttribute("getBaisuuReturn", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("getBaisuu", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Function BegingetBaisuu(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getBaisuu", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetBaisuu(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBaisuuAsync()
            Me.getBaisuuAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBaisuuAsync(ByVal userState As Object)
            If (Me.getBaisuuOperationCompleted Is Nothing) Then
                Me.getBaisuuOperationCompleted = AddressOf Me.OngetBaisuuOperationCompleted
            End If
            Me.InvokeAsync("getBaisuu", New Object(-1) {}, Me.getBaisuuOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBaisuuOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBaisuuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBaisuuCompleted(Me, New getBaisuuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://DefaultNamespace", ResponseNamespace:="http://www.pao.ac:8080/axis/SamplePdf.jws")>  _
        Public Function getAddressList() As <System.Xml.Serialization.SoapElementAttribute("getAddressListReturn", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("getAddressList", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Function BegingetAddressList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getAddressList", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetAddressList(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAddressListAsync()
            Me.getAddressListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAddressListAsync(ByVal userState As Object)
            If (Me.getAddressListOperationCompleted Is Nothing) Then
                Me.getAddressListOperationCompleted = AddressOf Me.OngetAddressListOperationCompleted
            End If
            Me.InvokeAsync("getAddressList", New Object(-1) {}, Me.getAddressListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAddressListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAddressListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAddressListCompleted(Me, New getAddressListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://DefaultNamespace", ResponseNamespace:="http://www.pao.ac:8080/axis/SamplePdf.jws")>  _
        Public Function getMitsumori() As <System.Xml.Serialization.SoapElementAttribute("getMitsumoriReturn", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("getMitsumori", New Object(-1) {})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Function BegingetMitsumori(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getMitsumori", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetMitsumori(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMitsumoriAsync()
            Me.getMitsumoriAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMitsumoriAsync(ByVal userState As Object)
            If (Me.getMitsumoriOperationCompleted Is Nothing) Then
                Me.getMitsumoriOperationCompleted = AddressOf Me.OngetMitsumoriOperationCompleted
            End If
            Me.InvokeAsync("getMitsumori", New Object(-1) {}, Me.getMitsumoriOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMitsumoriOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMitsumoriCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMitsumoriCompleted(Me, New getMitsumoriCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub getPrintDataCompletedEventHandler(ByVal sender As Object, ByVal e As getPrintDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPrintDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub getBaisuuCompletedEventHandler(ByVal sender As Object, ByVal e As getBaisuuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBaisuuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub getAddressListCompletedEventHandler(ByVal sender As Object, ByVal e As getAddressListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAddressListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub getMitsumoriCompletedEventHandler(ByVal sender As Object, ByVal e As getMitsumoriCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMitsumoriCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
End Namespace
